{"version":3,"sources":["helpers.js","components/StorePicker.js","components/Header.js","components/Order.js","components/Login.js","components/AddFishForm.js","components/EditFishForm.js","base.js","components/Inventory.js","sample-fishes.js","components/Fish.js","components/App.js","components/NotFound.js","components/Router.js","index.js"],"names":["formatPrice","cents","toLocaleString","style","currency","rando","arr","Math","floor","random","length","getFunName","adjectives","concat","StorePicker","myInput","React","createRef","goToStore","event","preventDefault","storeName","_this","current","value","props","history","push","react_default","a","createElement","action","className","onSubmit","this","type","required","ref","placeholder","defaultValue","Component","Header","tagLine","Order","renderOrder","key","fish","fishes","count","order","isAvailable","status","react_transition_group","classNames","timeout","enter","exit","component","name","price","onClick","deleteFromOrder","_this2","orderIds","Object","keys","total","reduce","prevTotal","map","Login","authenticate","AddFishForm","nameRef","priceRef","statusRef","descRef","imageRef","createFish","e","parseFloat","desc","image","addFish","currentTarget","reset","EditFishForm","handlerChange","updatedFish","objectSpread","defineProperty","index","onChange","deleteFish","firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","base","Rebase","createClass","database","Inventory","state","uid","owner","authHandler","_callee","authData","store","regenerator_default","wrap","_context","prev","next","fetch","storeId","context","assertThisInitialized","sent","console","log","post","data","user","setState","stop","provider","authProvider","auth","signInWithPopup","then","logout","_callee2","_context2","signOut","onAuthStateChanged","_this3","components_EditFishForm","components_AddFishForm","loadSampleFishes","components_Login","fish1","fish2","fish3","fish4","fish5","fish6","fish7","fish8","fish9","Fish","_this$props$details","details","src","alt","disabled","addToOrder","App","Date","now","sampleFishes","params","match","localStorageRef","localStorage","getItem","JSON","parse","syncState","removeBinding","setItem","stringify","components_Header","components_Fish","components_Order","components_Inventory","NotFound","Router","BrowserRouter","Switch","Route","exact","path","render","components_Router","document","querySelector"],"mappings":"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","file":"static/js/main.ae3f31c9.chunk.js","sourcesContent":["export function formatPrice(cents) {\r\n  return (cents / 100).toLocaleString(\"en-US\", {\r\n    style: \"currency\",\r\n    currency: \"USD\"\r\n  });\r\n}\r\n\r\nexport function rando(arr) {\r\n  return arr[Math.floor(Math.random() * arr.length)];\r\n}\r\n\r\nexport function slugify(text) {\r\n  return text\r\n    .toString()\r\n    .toLowerCase()\r\n    .replace(/\\s+/g, \"-\")\r\n    .replace(/[^\\w-]+/g, \"\")\r\n    .replace(/--+/g, \"-\")\r\n    .replace(/^-+/, \"\")\r\n    .replace(/-+$/, \"\");\r\n}\r\n\r\nexport function getFunName() {\r\n  const adjectives = [\r\n    \"adorable\",\r\n    \"beautiful\",\r\n    \"clean\",\r\n    \"drab\",\r\n    \"elegant\",\r\n    \"fancy\",\r\n    \"glamorous\",\r\n    \"handsome\",\r\n    \"long\",\r\n    \"magnificent\",\r\n    \"old-fashioned\",\r\n    \"plain\",\r\n    \"quaint\",\r\n    \"sparkling\",\r\n    \"ugliest\",\r\n    \"unsightly\",\r\n    \"angry\",\r\n    \"bewildered\",\r\n    \"clumsy\",\r\n    \"defeated\",\r\n    \"embarrassed\",\r\n    \"fierce\",\r\n    \"grumpy\",\r\n    \"helpless\",\r\n    \"itchy\",\r\n    \"jealous\",\r\n    \"lazy\",\r\n    \"mysterious\",\r\n    \"nervous\",\r\n    \"obnoxious\",\r\n    \"panicky\",\r\n    \"repulsive\",\r\n    \"scary\",\r\n    \"thoughtless\",\r\n    \"uptight\",\r\n    \"worried\"\r\n  ];\r\n\r\n  const nouns = [\r\n    \"women\",\r\n    \"men\",\r\n    \"children\",\r\n    \"teeth\",\r\n    \"feet\",\r\n    \"people\",\r\n    \"leaves\",\r\n    \"mice\",\r\n    \"geese\",\r\n    \"halves\",\r\n    \"knives\",\r\n    \"wives\",\r\n    \"lives\",\r\n    \"elves\",\r\n    \"loaves\",\r\n    \"potatoes\",\r\n    \"tomatoes\",\r\n    \"cacti\",\r\n    \"foci\",\r\n    \"fungi\",\r\n    \"nuclei\",\r\n    \"syllabuses\",\r\n    \"analyses\",\r\n    \"diagnoses\",\r\n    \"oases\",\r\n    \"theses\",\r\n    \"crises\",\r\n    \"phenomena\",\r\n    \"criteria\",\r\n    \"data\"\r\n  ];\r\n\r\n  return `${rando(adjectives)}-${rando(adjectives)}-${rando(nouns)}`;\r\n}\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { getFunName } from '../helpers';\r\n\r\nclass StorePicker extends Component {\r\n  static propTypes = {\r\n    history: PropTypes.object\r\n  };\r\n  myInput = React.createRef();\r\n\r\n  goToStore = event => {\r\n    event.preventDefault();\r\n    const storeName = this.myInput.current.value;\r\n    this.props.history.push(`/store/${storeName}`);\r\n  };\r\n  render() {\r\n    return (\r\n      <form action=\"\" className=\"store-selector\" onSubmit={this.goToStore}>\r\n        <h2>Pleace enter the value</h2>\r\n        <input\r\n          type=\"text\"\r\n          required\r\n          ref={this.myInput}\r\n          placeholder=\"Store Name\"\r\n          defaultValue={getFunName()}\r\n        />\r\n        <button type=\"submit\">Visit Store ➡️</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default StorePicker;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nconst Header = props => (\r\n  <header className=\"top\">\r\n    <h1>\r\n      Catch\r\n      <span\r\n        className=\"ofThe\r\n    \"\r\n      >\r\n        <span className=\"Of\">of</span>\r\n        <span className=\"The\">the</span>\r\n      </span>\r\n      Day\r\n    </h1>\r\n    <h3 className=\"tagLine\">\r\n      <span>\r\n        {props.tagLine}\r\n      </span>\r\n    </h3>\r\n  </header>\r\n);\r\n\r\nHeader.propTypes = {\r\n  tagLine: PropTypes.string.isRequired\r\n}\r\n\r\n\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { formatPrice } from '../helpers';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\n\r\nclass Order extends React.Component {\r\n  static propTypes = {\r\n    fishes: PropTypes.object,\r\n    order: PropTypes.object,\r\n    deleteFromOrder: PropTypes.func\r\n  };\r\n  renderOrder = key => {\r\n    const fish = this.props.fishes[key];\r\n    const count = this.props.order[key];\r\n    const isAvailable = fish && fish.status === 'available';\r\n\r\n    if (!fish) return null;\r\n\r\n    if (!isAvailable) {\r\n      return (\r\n        <CSSTransition\r\n          classNames=\"order\"\r\n          key={key}\r\n          timeout={{ enter: 250, exit: 250 }}\r\n        >\r\n          <li key={key}>\r\n            Sorry {fish ? fish.name : 'fish'} is no longer available\r\n          </li>\r\n        </CSSTransition>\r\n      );\r\n    }\r\n    return (\r\n      <CSSTransition\r\n        classNames=\"order\"\r\n        key={key}\r\n        timeout={{ enter: 250, exit: 250 }}\r\n      >\r\n        <li key={key}>\r\n          <span>\r\n            <TransitionGroup component=\"span\" className=\"count\">\r\n              <CSSTransition\r\n                classNames=\"count\"\r\n                key={count}\r\n                timeout={{ enter: 2000, exit: 2000 }}\r\n              >\r\n                <span>{count}</span>\r\n              </CSSTransition>\r\n            </TransitionGroup>\r\n            lbs {fish.name}\r\n            {formatPrice(count * fish.price)}\r\n          </span>\r\n          <button onClick={() => this.props.deleteFromOrder(key)}>\r\n            &times;\r\n          </button>\r\n        </li>\r\n      </CSSTransition>\r\n    );\r\n  };\r\n  render() {\r\n    const orderIds = Object.keys(this.props.order);\r\n    const total = orderIds.reduce((prevTotal, key) => {\r\n      const fish = this.props.fishes[key];\r\n      const count = this.props.order[key];\r\n      const isAvailable = fish && fish.status === 'available';\r\n      if (isAvailable) {\r\n        return prevTotal + count * fish.price;\r\n      }\r\n      return prevTotal;\r\n    }, 0);\r\n    return (\r\n      <div className=\"order-wrap\">\r\n        <h2>Order</h2>\r\n        <TransitionGroup component=\"ul\" className=\"order\">\r\n          {orderIds.map(this.renderOrder)}\r\n        </TransitionGroup>\r\n        <div className=\"total\">\r\n          Total:\r\n          <strong>{formatPrice(total)}</strong>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Order;\r\n\r\n// import React, { Component } from 'react';\r\n// import { formatPrice } from '../helpers';\r\n// class Order extends Component {\r\n//   // renderOrder = key => {\r\n//   //   const fish = this.props.fishes[key];\r\n//   //   const count = this.props.order[key];\r\n//   //   // const isAvailable = fish.status === 'available';\r\n//   //   // if (!isAvailable) {\r\n//   //   //   <li>Sorry {fish ? fish.name : 'fish'} is out of available</li>;\r\n//   //   // }\r\n//   //   // return <li>\r\n//   //   //     {count} lbs {fish.name}\r\n//   //   //     {formatPrice(count * fish.price)}\r\n//   //   //   </li>\r\n//   // };\r\n//   render() {\r\n//     const orderIds = Object.keys(this.props.order);\r\n//     const total = orderIds.reduce((prevTotal, key) => {\r\n//       const fish = this.props.fishes[key];\r\n//       const count = this.props.order[key];\r\n//       const isAvailable = fish && fish.status === 'available';\r\n//       if (isAvailable) {\r\n//         return prevTotal + count * fish.price;\r\n//       }\r\n//       return prevTotal;\r\n//     }, 0);\r\n//     return (\r\n//       <div className=\"order-wrap\">\r\n//         <h2>Order</h2>\r\n//         <ul>{orderIds.map(key => <li>{key}</li>)}</ul>\r\n//         <div className=\"total\">\r\n//           Total:\r\n//           <strong>{formatPrice(total)}</strong>\r\n//         </div>\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// export default Order;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Login = (props) => (\r\n  <nav className=\"login\">\r\n    <h2>Inventory login</h2>\r\n    <p>Sing in to manage your store`s inventory.</p>\r\n    <button\r\n      className=\"github\"\r\n      onClick={() => props.authenticate('Github')}\r\n    >\r\n      Enter with Github\r\n    </button>\r\n    <button\r\n      className=\"twitter\"\r\n      onClick={() => props.authenticate('Twitter')}\r\n    >\r\n      Enter with Twitter\r\n    </button>\r\n    <button\r\n      className=\"facebook\"\r\n      onClick={() => props.authenticate('Facebook')}\r\n    >\r\n      Enter with Facebook\r\n    </button>\r\n  </nav>\r\n);\r\nLogin.propTypes = {\r\n  authenticate: PropTypes.func.isRequired\r\n};\r\nexport default Login;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass AddFishForm extends Component {\r\n  static propTypes = {\r\n    addFish: PropTypes.func\r\n  };\r\n\r\n  nameRef = React.createRef();\r\n  priceRef = React.createRef();\r\n  statusRef = React.createRef();\r\n  descRef = React.createRef();\r\n  imageRef = React.createRef();\r\n\r\n  createFish = e => {\r\n    e.preventDefault();\r\n    const fish = {\r\n      name: this.nameRef.current.value,\r\n      price: parseFloat(this.priceRef.current.value),\r\n      status: this.statusRef.current.value,\r\n      desc: this.descRef.current.value,\r\n      image: this.imageRef.current.value\r\n    };\r\n    this.props.addFish(fish);\r\n    e.currentTarget.reset();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form className=\"fish-edit\" onSubmit={this.createFish}>\r\n        <input name=\"name\" ref={this.nameRef} type=\"text\" placeholder=\"Name\" />\r\n        <input\r\n          name=\"price\"\r\n          ref={this.priceRef}\r\n          type=\"text\"\r\n          placeholder=\"Price\"\r\n        />\r\n        <select name=\"status\" ref={this.statusRef}>\r\n          <option value=\"available\">Fresh!</option>\r\n          <option value=\"unavailable\">Sold out!</option>\r\n        </select>\r\n\r\n        <textarea name=\"desc\" ref={this.descRef} placeholder=\"Desc\" />\r\n        <input\r\n          name=\"image\"\r\n          ref={this.imageRef}\r\n          type=\"text\"\r\n          placeholder=\"Image\"\r\n        />\r\n        <button type=\"submit\">+ Add Fish</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddFishForm;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass EditFishForm extends Component {\r\n  static propTypes = {\r\n    fish: PropTypes.shape({\r\n      image: PropTypes.string,\r\n      name: PropTypes.string,\r\n      desc: PropTypes.string,\r\n      status: PropTypes.string,\r\n      price: PropTypes.number\r\n    }),\r\n    updatedFish: PropTypes.func,\r\n    index: PropTypes.string\r\n  };\r\n  handlerChange = event => {\r\n    // console.log(event.currentTarget.value);\r\n    const updatedFish = {\r\n      ...this.props.fish,\r\n      [event.currentTarget.name]: event.currentTarget.value\r\n    };\r\n    this.props.updatedFish(this.props.index, updatedFish);\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"fish-edit\">\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          onChange={this.handlerChange}\r\n          value={this.props.fish.name}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"price\"\r\n          onChange={this.handlerChange}\r\n          value={this.props.fish.price}\r\n        />\r\n        <select\r\n          type=\"text\"\r\n          name=\"status\"\r\n          onChange={this.handlerChange}\r\n          value={this.props.fish.status}\r\n        >\r\n          <option value=\"available\">Fresh!</option>\r\n          <option value=\"unavailable\">Sold out!</option>\r\n        </select>\r\n        <textarea\r\n          name=\"desc\"\r\n          onChange={this.handlerChange}\r\n          value={this.props.fish.desc}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"image\"\r\n          onChange={this.handlerChange}\r\n          value={this.props.fish.image}\r\n        />\r\n        <button onClick={() => this.props.deleteFish(this.props.index)}>\r\n          Delete Fish\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditFishForm;\r\n","import Rebase from 're-base';\r\nimport firebase from 'firebase';\r\n\r\nconst firebaseApp = firebase.initializeApp({\r\n  apiKey: 'AIzaSyADbqzloYXs8C96znO0zRTU2ZL1qpMpp-A',\r\n  authDomain: 'catch-of-the-day-gromov.firebaseapp.com',\r\n  databaseURL: 'https://catch-of-the-day-gromov.firebaseio.com'\r\n});\r\n\r\nconst base = Rebase.createClass(firebaseApp.database());\r\n\r\nexport {firebaseApp};\r\nexport default base; \r\n\r\n\r\n\r\n \r\n\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport firebase from 'firebase';\r\nimport Login from './Login';\r\nimport AddFishForm from './AddFishForm';\r\nimport EditFishForm from './EditFishForm';\r\nimport base, { firebaseApp } from '../base';\r\n\r\nclass Inventory extends Component {\r\n  static propTypes = {\r\n    fishes: PropTypes.object,\r\n    updatedFish: PropTypes.func,\r\n    deleteFish: PropTypes.func,\r\n    loadSampleFishes: PropTypes.func\r\n  };\r\n\r\n  state = {\r\n    uid: null,\r\n    owner: null\r\n  };\r\n\r\n  componentDidMount() {\r\n    firebase.auth().onAuthStateChanged(user => {\r\n      if (user) {\r\n        this.authHandler({ user });\r\n      }\r\n    });\r\n  }\r\n\r\n  authHandler = async authData => {\r\n    const store = await base.fetch(this.props.storeId, { context: this });\r\n    console.log(store);\r\n    console.log(authData);\r\n    if (!store.owner) {\r\n      base.post(`${this.props.storeId}/owner`, { data: authData.user.uid });\r\n    }\r\n    this.setState({\r\n      uid: authData.user.uid,\r\n      owner: store.owner || authData.user.uid\r\n    });\r\n  };\r\n\r\n  authenticate = provider => {\r\n    const authProvider = new firebase.auth[`${provider}AuthProvider`]();\r\n    firebaseApp\r\n      .auth()\r\n      .signInWithPopup(authProvider)\r\n      .then(this.authHandler);\r\n  };\r\n\r\n  logout = async () => {\r\n    await firebase.auth().signOut();\r\n    this.setState({ uid: null });\r\n  };\r\n\r\n  render() {\r\n    const logout = <button onClick={this.logout}>Log Out</button>;\r\n    if (!this.state.uid) {\r\n      return <Login authenticate={this.authenticate} />;\r\n    }\r\n\r\n    if (this.state.uid !== this.state.owner) {\r\n      return (\r\n        <div>\r\n          <p>Sorry you are not the owner</p>\r\n          {logout}\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div className=\"inventory\">\r\n        <h2>Inventory</h2>\r\n        {logout}\r\n        {Object.keys(this.props.fishes).map(key => {\r\n          return (\r\n            <EditFishForm\r\n              key={key}\r\n              index={key}\r\n              fish={this.props.fishes[key]}\r\n              updatedFish={this.props.updatedFish}\r\n              deleteFish={this.props.deleteFish}\r\n            />\r\n          );\r\n        })}\r\n        <AddFishForm addFish={this.props.addFish} />\r\n        <form />\r\n        <button type=\"submit\" onClick={this.props.loadSampleFishes}>\r\n          Load Sample Fishes!\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Inventory;\r\n","// This is just some sample data so you don't have to think of your own!\r\nconst fishes = {\r\n  fish1: {\r\n    name: \"Pacific Halibut\",\r\n    image: \"/images/hali.jpg\",\r\n    desc:\r\n      \"Everyone’s favorite white fish. We will cut it to the size you need and ship it.\",\r\n    price: 1724,\r\n    status: \"available\"\r\n  },\r\n\r\n  fish2: {\r\n    name: \"Lobster\",\r\n    image: \"/images/lobster.jpg\",\r\n    desc:\r\n      \"These tender, mouth-watering beauties are a fantastic hit at any dinner party.\",\r\n    price: 3200,\r\n    status: \"available\"\r\n  },\r\n\r\n  fish3: {\r\n    name: \"Sea Scallops\",\r\n    image: \"/images/scallops.jpg\",\r\n    desc:\r\n      \"Big, sweet and tender. True dry-pack scallops from the icey waters of Alaska. About 8-10 per pound\",\r\n    price: 1684,\r\n    status: \"unavailable\"\r\n  },\r\n\r\n  fish4: {\r\n    name: \"Mahi Mahi\",\r\n    image: \"/images/mahi.jpg\",\r\n    desc:\r\n      \"Lean flesh with a mild, sweet flavor profile, moderately firm texture and large, moist flakes. \",\r\n    price: 1129,\r\n    status: \"available\"\r\n  },\r\n\r\n  fish5: {\r\n    name: \"King Crab\",\r\n    image: \"/images/crab.jpg\",\r\n    desc:\r\n      \"Crack these open and enjoy them plain or with one of our cocktail sauces\",\r\n    price: 4234,\r\n    status: \"available\"\r\n  },\r\n\r\n  fish6: {\r\n    name: \"Atlantic Salmon\",\r\n    image: \"/images/salmon.jpg\",\r\n    desc:\r\n      \"This flaky, oily salmon is truly the king of the sea. Bake it, grill it, broil it...as good as it gets!\",\r\n    price: 1453,\r\n    status: \"available\"\r\n  },\r\n\r\n  fish7: {\r\n    name: \"Oysters\",\r\n    image: \"/images/oysters.jpg\",\r\n    desc: \"A soft plump oyster with a sweet salty flavor and a clean finish.\",\r\n    price: 2543,\r\n    status: \"available\"\r\n  },\r\n\r\n  fish8: {\r\n    name: \"Mussels\",\r\n    image: \"/images/mussels.jpg\",\r\n    desc:\r\n      \"The best mussels from the Pacific Northwest with a full-flavored and complex taste.\",\r\n    price: 425,\r\n    status: \"available\"\r\n  },\r\n\r\n  fish9: {\r\n    name: \"Jumbo Prawns\",\r\n    image: \"/images/prawns.jpg\",\r\n    desc:\r\n      \"With 21-25 two bite prawns in each pound, these sweet morsels are perfect for shish-kabobs.\",\r\n    price: 2250,\r\n    status: \"available\"\r\n  }\r\n};\r\n\r\nexport default fishes;\r\n","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport { formatPrice } from \"../helpers\";\r\n\r\nclass Fish extends React.Component {\r\n  static propTypes = {\r\n    details: PropTypes.shape({\r\n      image: PropTypes.string,\r\n      name: PropTypes.string,\r\n      desc: PropTypes.string,\r\n      status: PropTypes.string, \r\n      price: PropTypes.number\r\n    })\r\n  }\r\n  render() {\r\n    const { image, name, price, desc, status } = this.props.details;\r\n    // console.log(status);\r\n    const isAvailable = status === \"available\";\r\n    return (\r\n      <li className=\"menu-fish\">\r\n        <img src={image} alt={name} />\r\n        <h3 className=\"fish-name\">\r\n          {name}\r\n          <span className=\"price\">{formatPrice(price)}</span>\r\n        </h3>\r\n        <p>{desc}</p>\r\n        <button\r\n          disabled={!isAvailable}\r\n          onClick={() => this.props.addToOrder(this.props.index)}\r\n        >\r\n          {isAvailable ? \"Add To Order\" : \"Sold Out!\"}\r\n        </button>\r\n      </li>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Fish;\r\n\r\n// import React, { Component, Fragment} from 'react';\r\n// import { formatPrice } from '../helpers';\r\n// class Fish extends Component {\r\n//   handleClick = () => {\r\n//     this.props.addtoorder(this.props.indexKey)\r\n//   }\r\n//   render() {\r\n//     const { image, name, price, desc, status } = this.props.details;\r\n//     const isAvailable = status ==='available';\r\n//     return (\r\n//       <li className=\"menu-fish\">\r\n//         <img src={image} alt={name} />\r\n//         <h3 className=\"fish-name\">\r\n//           {name}\r\n//           <span className=\"price\">{formatPrice(price)}</span>\r\n//         </h3>\r\n//         <p>{desc}</p>\r\n//         <button addtoorder={this.props.addToOrder} disabled={!isAvailable} onClick={this.handleClick}>{isAvailable ? 'Add To Card' : 'Sold Out'}</button>\r\n//       </li>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// export default Fish;\r\n","import React from 'react';\r\nimport Header from './Header';\r\nimport Order from './Order';\r\nimport Inventory from './Inventory';\r\nimport sampleFishes from '../sample-fishes';\r\nimport Fish from './Fish';\r\nimport base from '../base';\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    fishes: {},\r\n    order: {}\r\n  };\r\n  componentDidMount() {\r\n    const { params } = this.props.match;\r\n    const localStorageRef = localStorage.getItem(params.storeId);\r\n    if (localStorageRef) {\r\n      this.setState({ order: JSON.parse(localStorageRef) });\r\n    }\r\n    this.ref = base.syncState(`${params.storeId}/fishes`, {\r\n      context: this,\r\n      state: 'fishes'\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    base.removeBinding(this.ref);\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    localStorage.setItem(\r\n      this.props.match.params.storeId,\r\n      JSON.stringify(this.state.order)\r\n    );\r\n  }\r\n\r\n  addFish = fish => {\r\n    // 1. Take a copy of the existing state\r\n    const fishes = { ...this.state.fishes };\r\n    // 2. Add our new fish to that fishes variable\r\n    fishes[`fish${Date.now()}`] = fish;\r\n    // 3. Set the new fishes object to state\r\n    this.setState({ fishes });\r\n  };\r\n\r\n  deleteFish = key => {\r\n    const fishes = { ...this.state.fishes };\r\n    fishes[key] = null;\r\n    this.setState({ fishes });\r\n  };\r\n\r\n  updatedFish = (index, updatedFish) => {\r\n    const fishes = { ...this.state.fishes };\r\n    fishes[index] = updatedFish;\r\n    this.setState({ fishes });\r\n  };\r\n\r\n  loadSampleFishes = () => {\r\n    this.setState({ fishes: sampleFishes });\r\n  };\r\n\r\n  addToOrder = key => {\r\n    // 1. take a copy of state\r\n    const order = { ...this.state.order };\r\n    // 2. Either add to the order, or update the number in our order\r\n    order[key] = order[key] + 1 || 1;\r\n    // 3. Call setState to update our state object\r\n    this.setState({ order });\r\n  };\r\n\r\n  deleteFromOrder = key => {\r\n    const order = { ...this.state.order };\r\n    delete order[key];\r\n    this.setState({ order });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"catch-of-the-day\">\r\n        <div className=\"menu\">\r\n          <Header tagLine=\"Fresh Seafood Market\" />\r\n          <ul className=\"fishes\">\r\n            {Object.keys(this.state.fishes).map(key => (\r\n              <Fish\r\n                key={key}\r\n                index={key}\r\n                details={this.state.fishes[key]}\r\n                addToOrder={this.addToOrder}\r\n              />\r\n            ))}\r\n          </ul>\r\n        </div>\r\n        <Order\r\n          fishes={this.state.fishes}\r\n          order={this.state.order}\r\n          deleteFromOrder={this.deleteFromOrder}\r\n        />\r\n        <Inventory\r\n          addFish={this.addFish}\r\n          deleteFish={this.deleteFish}\r\n          loadSampleFishes={this.loadSampleFishes}\r\n          fishes={this.state.fishes}\r\n          updatedFish={this.updatedFish}\r\n          storeId={this.props.match.params.storeId}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\n\r\n\r\n const NotFound = () => (\r\n<div className=\"\">\r\n  <h2>Not Found!!!!!</h2>\r\n</div>\r\n);\r\n\r\nexport default NotFound\r\n   \r\n ","import React from 'react';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\nimport StorePicker from './StorePicker';\r\nimport App from './App';\r\nimport NotFound from './NotFound';\r\n\r\nconst Router = () => (\r\n  <BrowserRouter>\r\n    <Switch>\r\n      <Route exact path=\"/\" component={StorePicker} />\r\n      <Route path=\"/store/:storeId\" component={App} />\r\n      <Route component={NotFound} />\r\n    </Switch>\r\n  </BrowserRouter>\r\n);\r\n\r\nexport default Router;\r\n\r\n\r\n","import React from 'react';\r\nimport { render } from 'react-dom';\r\nimport Router from './components/Router';\r\nimport moduleName from './css/style.css';\r\n\r\nrender(<Router />, document.querySelector('#main'));\r\n"],"sourceRoot":""}